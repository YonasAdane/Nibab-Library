// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// Define the generator and datasource
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model
model User {
  id         Int         @id @default(autoincrement())
  username   String      @unique
  password   String
  firstName  String?
  lastName   String?
  email      String      @unique
  role       Role
  verified   Boolean     @default(false)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  images     Image[]
  borrowings Borrowing[]
}

enum Role {
  SUPERUSER
  ADMIN
  MEMBER
}

// Book model
model Book {
  id              Int         @id @default(autoincrement())
  title           String
  author          String
  genre           String?
  description     String?
  isbn            String?     @unique
  publicationYear Int?
  available       Boolean     @default(true)
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  images          Image[]
  borrowings      Borrowing[]
}

// Borrowing model
model Borrowing {
  id         Int       @id @default(autoincrement())
  userId     Int
  bookId     Int
  borrowDate DateTime  @default(now())
  dueDate    DateTime
  returnDate DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  user       User      @relation(fields: [userId], references: [id])
  book       Book      @relation(fields: [bookId], references: [id])
}

// Image model
model Image {
  id        Int      @id @default(autoincrement())
  fileUrl   String
  fileType  FileType
  user      User?    @relation(fields: [userId], references: [id])
  book      Book?    @relation(fields: [bookId], references: [id])
  userId    Int?     @unique
  bookId    Int?     @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum FileType {
  PROFILE
  BOOK
}
